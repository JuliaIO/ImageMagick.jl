using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libpng16"], :libpng),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/SimonDanisch/LibpngBuilder/releases/download/v1.0.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/libpng.v1.6.31.aarch64-linux-gnu.tar.gz", "2d0c38f18611216b51f8460b999cc866102578d33c2be472986e6462e09479db"),
    Linux(:aarch64, :musl) => ("$bin_prefix/libpng.v1.6.31.aarch64-linux-musl.tar.gz", "6bcc88ea512bc8cbf07439b910798a606ed0923d3a3e67a8fcff7f12e154eeae"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/libpng.v1.6.31.arm-linux-gnueabihf.tar.gz", "860d36dc6229f4397dabeea9a526c8e7c50862da9f6325838699546fb2244303"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/libpng.v1.6.31.arm-linux-musleabihf.tar.gz", "c927a91cad42e383f7834245e6487093b637ae304997243927a48e4cf39efdfa"),
    Linux(:i686, :glibc) => ("$bin_prefix/libpng.v1.6.31.i686-linux-gnu.tar.gz", "9c8ca0c085e00c1fdafe68db9314c506692d60cccf6f3da875a35af96fb8f78f"),
    Linux(:i686, :musl) => ("$bin_prefix/libpng.v1.6.31.i686-linux-musl.tar.gz", "3967682d282c051bdc7048ec63133210a83f5ee0433057c8055dfe70c290c9ce"),
    Windows(:i686) => ("$bin_prefix/libpng.v1.6.31.i686-w64-mingw32.tar.gz", "e05cf4566e9004b3e9ef0b5eae08e31390a64695ac494f19b6447989fc3ae2cb"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/libpng.v1.6.31.powerpc64le-linux-gnu.tar.gz", "da225108ab3289967944e6b0669322ee9fc5be43b48b1586f5ed9b02c7bd52d6"),
    MacOS(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-apple-darwin14.tar.gz", "a6a6261e4c9d2471744691556613e7294f570958a43758b62adfc24e41a319d7"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/libpng.v1.6.31.x86_64-linux-gnu.tar.gz", "73c04f3e5d40c5d62f643560f7ff0482f18c54683ba81c87e99a21a98e92f335"),
    Linux(:x86_64, :musl) => ("$bin_prefix/libpng.v1.6.31.x86_64-linux-musl.tar.gz", "bfcba469c0580efb8fabd3996674b63f80dba4b68ce25dce73da8e890485be91"),
    FreeBSD(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-unknown-freebsd11.1.tar.gz", "ff74157044ea11879b636b360b883e74565c9040a140f9ec4861d3f0622509a1"),
    Windows(:x86_64) => ("$bin_prefix/libpng.v1.6.31.x86_64-w64-mingw32.tar.gz", "d48fc3a81c55b550320b517b90a2a6e69eccf24fa2885bd586aadfb5fbe84e7a"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps_png.jl"), products)
