using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libMagickWand"], :libwand),
    LibraryProduct(prefix, String["libMagickCore"], :libmagickcore),
    LibraryProduct(prefix, String["libMagick++"], :libmagick),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaIO/ImageMagickBuilder/releases/download/v1.0.0/"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/imagemagick.aarch64-linux-gnu.tar.gz", "8104393feb7f976f1ced2f574446587e144d8574211598a751f29c04f95b7d63"),
    Linux(:aarch64, :musl) => ("$bin_prefix/imagemagick.aarch64-linux-musl.tar.gz", "7a6875b463925b8507e74270f7307ca4efa3b975c7284f81ae6f7636d74e10e6"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/imagemagick.arm-linux-gnueabihf.tar.gz", "c33d2d80aa75d6e817cc073ff56dc5c60b106fce88f507e432eed36b322b1de8"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/imagemagick.arm-linux-musleabihf.tar.gz", "60c13f8d518139bfd58f79b29abea9b2fe3ded21fb0ec3f5cc34d9db48fb362d"),
    Linux(:i686, :glibc) => ("$bin_prefix/imagemagick.i686-linux-gnu.tar.gz", "24e10b5aaed0856e06e969514802055c1931dc96526e4ac7dda2699d75e9432f"),
    Linux(:i686, :musl) => ("$bin_prefix/imagemagick.i686-linux-musl.tar.gz", "7959ac89e133f833d1efc86bdc1dc85e435de55e1a7fac72807728ece952a3de"),
    Windows(:i686) => ("$bin_prefix/imagemagick.i686-w64-mingw32.tar.gz", "02fbd25cb1adb98917454d9aaffa77c6ac60355b69d9c5e3ebd23e8820f74069"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/imagemagick.powerpc64le-linux-gnu.tar.gz", "ecc73bc3abcd159ab0cdaea3f8e7440dd189f37fec1bbe38948c65ada2039c41"),
    MacOS(:x86_64) => ("$bin_prefix/imagemagick.x86_64-apple-darwin14.tar.gz", "b285b580c65529e3951a97fe29b777464fe60dd14c4ce29d1b9a0c0cc9238d1f"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/imagemagick.x86_64-linux-gnu.tar.gz", "60f175bc36cd027e459550d9cfe3eea5ae2bf821f7e85f600007a8353dc758de"),
    Linux(:x86_64, :musl) => ("$bin_prefix/imagemagick.x86_64-linux-musl.tar.gz", "d110f74c055ce96330c2c8e885958aac765227f39b6cf2b16e8a589076b6d73d"),
    FreeBSD(:x86_64) => ("$bin_prefix/imagemagick.x86_64-unknown-freebsd11.1.tar.gz", "7f347abf254147b7b56b04364900be79a1eb5750caa19a866cb6316f0e643c2b"),
    Windows(:x86_64) => ("$bin_prefix/imagemagick.x86_64-w64-mingw32.tar.gz", "c75fabb06957d4b47aafe59b8c021b67cbcfa238ab6d4b6ccdc6a1ffb2e0be37"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
println(products)
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
