using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libpng16"], :libpng),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/SimonDanisch/LibpngBuilder/releases/download/v1.6.31"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/libpng.v1.0.0.aarch64-linux-gnu.tar.gz", "066248a17adcbd9533a3abb61aeb92d96f1341e1b588ee938ca93aece66afeee"),
    Linux(:aarch64, :musl) => ("$bin_prefix/libpng.v1.0.0.aarch64-linux-musl.tar.gz", "f1f85dcb141b508301db19e9a11ef43a999b39b1a4ced29e64c8f52700eab43b"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/libpng.v1.0.0.arm-linux-gnueabihf.tar.gz", "28be4910b6ef152d604b432b2aef9617774e306b2744c312c7499196a660950c"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/libpng.v1.0.0.arm-linux-musleabihf.tar.gz", "0809cbce8c12a3f9632718a827ed8820225374553eb3eda92a3e8c56b033b77b"),
    Linux(:i686, :glibc) => ("$bin_prefix/libpng.v1.0.0.i686-linux-gnu.tar.gz", "c6937fcc23a15c3eadfbf13a1fa7aa8046e5e82192d0e79378d1d57e25c2a7c0"),
    Linux(:i686, :musl) => ("$bin_prefix/libpng.v1.0.0.i686-linux-musl.tar.gz", "50a7c43df57ef32d0ab61f5059f3bccf423e18d4d9e86d1a084174bbe2b62ffb"),
    Windows(:i686) => ("$bin_prefix/libpng.v1.0.0.i686-w64-mingw32.tar.gz", "7adfe9b2e2f91798d43bc98f79645b69cb611fd5221fa803ce8ba530ccf9bcfa"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/libpng.v1.0.0.powerpc64le-linux-gnu.tar.gz", "90430fa0a2858db0ffc87981e14c5864171389e6af50be9cf7c9ed5a85713e5c"),
    MacOS(:x86_64) => ("$bin_prefix/libpng.v1.0.0.x86_64-apple-darwin14.tar.gz", "53a530ca9251761cd3e0123fee3ff470a473097e7f112038e4c5b7ca7aa4eae9"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/libpng.v1.0.0.x86_64-linux-gnu.tar.gz", "eee0ffe168e0ba11129a544f666bc9840036a0761234f36e15421c9004c5be55"),
    Linux(:x86_64, :musl) => ("$bin_prefix/libpng.v1.0.0.x86_64-linux-musl.tar.gz", "458cb397e183772a87ca7bc7fbb309cdc082a74a70460ce3b90027f1565d5f40"),
    FreeBSD(:x86_64) => ("$bin_prefix/libpng.v1.0.0.x86_64-unknown-freebsd11.1.tar.gz", "afe7b58dc391ff1f2e982c5a734d33fc942ba611349d79f917d5c0647cc1148a"),
    Windows(:x86_64) => ("$bin_prefix/libpng.v1.0.0.x86_64-w64-mingw32.tar.gz", "ff95e2f2f7d5c410c5374e7e86ab443bb58ff132bf418ab0db99c3385cb0bee2"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
